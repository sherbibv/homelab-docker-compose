version: '3.4'

networks:
  utility-services:
    external: true
  none:
    external: true

services:
  wireguard:
    image: weejewel/wg-easy:7
    container_name: wireguard
    environment:
      - WG_HOST=${DOMAIN_URL}
      - PASSWORD=${WIREGUARD_UI_PASSWORD}
      - WG_ALLOWED_IPS=${SERVER_SUBNET}
    volumes:
      - ${VOLUMES_PATH}/utility-services/wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - utility-services
    healthcheck:
      test: wget -qO- http://localhost:51821 >/dev/null || exit 1
      interval: 60s
      retries: 5
      timeout: 10s
      start_period: 20s

  uptime-kuma:
    image: louislam/uptime-kuma:1.21.2
    container_name: uptime-kuma
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/utility-services/uptime-kuma/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 1337:3001
    restart: unless-stopped
    networks:
      - utility-services

  homepage:
    image: ghcr.io/benphelps/homepage:v0.6.16
    container_name: homepage
    environment:
      - TZ=${TIMEZONE}
    ports:
      - 3000:3000
    volumes:
      - ${VOLUMES_PATH}/utility-services/homepage/config:/app/config
      - ${MEDIA_HDD_PATH}:/media
      - ${SCPRIME_DATA_PATH}:/scprime-data
      - ${BACKUP_PATH}:/backup
    restart: unless-stopped
    networks:
      - utility-services

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1.1
    container_name: dockerproxy
    environment:
      - CONTAINERS=1
      - POST=0
    ports:
      - 2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - utility-services

  speedtest-tracker:
    image: ghcr.io/alexjustesen/speedtest-tracker:v0.11.13
    container_name: speedtest-tracker
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 8081:80
      - 8443:443
    volumes:
      - ${VOLUMES_PATH}/utility-services/speedtest/config:/config
    restart: unless-stopped
    networks:
      - utility-services

  supercronic:
    image: ghcr.io/sherbibv/supercronic:0.0.7
    container_name: supercronic
    network_mode: none
    command: supercronic -debug backup-crontab
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${SCPRIME_METADATA_PATH}:/scprime-metadata
      - ${BACKUP_PATH}/scprime:/scprime-backup
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:v0.7.1-omnibus
    cap_add:
      - SYS_RAWIO
    ports:
      - 8082:8080
      - 8086:8086
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - /run/udev:/run/udev:ro
      - ${VOLUMES_PATH}/utility-services/scrutiny/config:/opt/scrutiny/config
      - ${VOLUMES_PATH}/utility-services/influxdb:/opt/scrutiny/influxdb
    restart: unless-stopped
    devices:
      - /dev/sda # 6Tb drive
      - /dev/sdb # SSD
      - /dev/sdc # Media drive
      - /dev/sdd # Backup drive
    networks:
      - utility-services
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8080/api/health | grep -q 'true'
      interval: 60s
      retries: 5
      timeout: 10s
      start_period: 20s

  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    ports:
      - 8300:80
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/utility-services/filebrowser/database:/database
      - ${VOLUMES_PATH}/utility-services/filebrowser/config:/config
      - /:/srv
    restart: unless-stopped
    networks:
      - utility-services

  duplicacy:
    image: saspus/duplicacy-web:mini
    container_name: duplicacy
    hostname: duplicacy-web
    environment:
      TZ: ${TIMEZONE}
      DUPLICACY_WEB_VERSION: Stable
    ports:
      - 3875:3875
    volumes:
      - ${VOLUMES_PATH}/utility-services/duplicacy/config:/config
      - ${VOLUMES_PATH}/utility-services/duplicacy/logs:/logs
      - ${VOLUMES_PATH}/utility-services/duplicacy/cache:/cache
      - ${VOLUMES_PATH}:/docker-source
      - ${BACKUP_PATH}/duplicacy/docker:/docker-backup
      - ${SCPRIME_METADATA_PATH}:/scprime-source
      - ${BACKUP_PATH}/duplicacy/scprime:/scprime-backup
    restart: unless-stopped
    networks:
      - utility-services

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v4.9.4
    environment:
      - DOZZLE_USERNAME=${DOZZLE_USERNAME}
      - DOZZLE_PASSWORD=${DOZZLE_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    networks:
      - utility-services
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s
version: '3.4'

networks:
  utility-services:
    external: true

services:
  homepage:
    image: ghcr.io/benphelps/homepage:v0.6.21
    container_name: homepage
    ports:
      - 3000:3000
    environment:
      - TZ=${TIMEZONE}
      - HOMEPAGE_VAR_SERVER_IP=${SERVER_IP}
      - HOMEPAGE_VAR_SONARR_KEY=${SONARR_API_KEY}
      - HOMEPAGE_VAR_RADARR_KEY=${RADARR_API_KEY}
      - HOMEPAGE_VAR_OVERSEERR_KEY=${OVERSEERR_API_KEY}
      - HOMEPAGE_VAR_BAZARR_KEY=${BAZARR_API_KEY}
      - HOMEPAGE_VAR_DELUGE_PASSWORD=${DELUGE_PASSWORD}
      - HOMEPAGE_VAR_TAUTULLI_KEY=${TAUTULLI_API_KEY}
      - HOMEPAGE_VAR_PORTAINER_KEY=${PORTAINER_API_KEY}
      - HOMEPAGE_VAR_HOMEBRIDGE_USERNAME=${HOMEBRIDGE_USERNAME}
      - HOMEPAGE_VAR_HOMEBRIDGE_PASSWORD=${HOMEBRIDGE_PASSWORD}
    volumes:
      - ${VOLUMES_PATH}/utility-services/homepage/config:/app/config
      - ${MEDIA_HDD_PATH}:/media
      - ${SCPRIME_DATA_PATH}:/scprime-data
      - ${BACKUP_PATH}:/backup
    restart: unless-stopped
    networks:
      - utility-services

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1.1
    container_name: dockerproxy
    ports:
      - 2375:2375
    environment:
      - CONTAINERS=1
      - POST=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - utility-services

  speedtest-tracker:
    image: ghcr.io/alexjustesen/speedtest-tracker:v0.11.17
    container_name: speedtest-tracker
    ports:
      - 8081:80
      - 8443:443
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${VOLUMES_PATH}/utility-services/speedtest/config:/config
    restart: unless-stopped
    networks:
      - utility-services

  scrutiny:
    image: ghcr.io/analogj/scrutiny:v0.7.1-omnibus
    container_name: scrutiny
    ports:
      - 8082:8080
      - 8086:8086
    environment:
      - TZ=${TIMEZONE}
      - COLLECTOR_CRON_SCHEDULE="0 * * * *"
    volumes:
      - /run/udev:/run/udev:ro
      - ${VOLUMES_PATH}/utility-services/scrutiny/config:/opt/scrutiny/config
      - ${VOLUMES_PATH}/utility-services/scrutiny/influxdb:/opt/scrutiny/influxdb
    cap_add:
      - SYS_RAWIO
    privileged: true
    restart: unless-stopped
    networks:
      - utility-services
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8080/api/health | grep -q 'true'
      interval: 60s
      retries: 5
      timeout: 10s
      start_period: 20s

  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    ports:
      - 8300:80
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/utility-services/filebrowser/database:/database
      - ${VOLUMES_PATH}/utility-services/filebrowser/config:/config
      - /:/srv
    restart: unless-stopped
    networks:
      - utility-services

  duplicacy:
    image: cr.hotio.dev/hotio/duplicacy:release-1.6.3
    container_name: duplicacy
    ports:
      - 3875:3875
    environment:
      - PUID=0
      - PGID=0
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/utility-services/duplicacy/config:/config
      - ${VOLUMES_PATH}/utility-services/duplicacy/logs:/logs
      - ${VOLUMES_PATH}/utility-services/duplicacy/cache:/cache
      - ${VOLUMES_PATH}:/docker-source
      - ${BACKUP_PATH}/duplicacy/docker:/docker-backup
      - ${SCPRIME_METADATA_PATH}:/scprime-source
      - ${BACKUP_PATH}/duplicacy/scprime:/scprime-backup
    hostname: duplicacy
    restart: unless-stopped
    networks:
      - utility-services

  dozzle:
    image: amir20/dozzle:v4.10.19
    container_name: dozzle
    ports:
      - 9999:8080
    environment:
      - DOZZLE_USERNAME=${DOZZLE_USERNAME}
      - DOZZLE_PASSWORD=${DOZZLE_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - utility-services
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s
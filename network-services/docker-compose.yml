version: '3.4'

networks:
  network-services:
    external: true

services:
  wireguard:
    image: weejewel/wg-easy:7
    container_name: wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    environment:
      - WG_HOST=${DOMAIN_URL}
      - PASSWORD=${WIREGUARD_UI_PASSWORD}
      - WG_ALLOWED_IPS=${SERVER_SUBNET}
      - WG_POST_UP=${CUSTOM_WG_POST_UP}
      - WG_POST_DOWN=${CUSTOM_WG_POST_DOWN}
    volumes:
      - ${VOLUMES_PATH}/network-services/wireguard:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      - network-services
    healthcheck:
      test: wget -qO- http://localhost:51821 >/dev/null || exit 1
      interval: 60s
      retries: 5
      timeout: 10s
      start_period: 20s

  uptime-kuma:
    image: louislam/uptime-kuma:1.23.11
    container_name: uptime-kuma
    ports:
      - 1337:3001
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/network-services/uptime-kuma/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - network-services
      
  unifi:
    image: linuxserver/unifi-network-application:8.0.26
    container_name: unifi
    ports:
      - 8776:8443
      - 3478:3478
      - 8787:8080
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - MONGO_USER=${UNIFI_MONGO_USER}
      - MONGO_PASS=${UNIFI_MONGO_PASS}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=27017
      - MONGO_DBNAME=${UNIFI_MONGO_DBNAME}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - ${VOLUMES_PATH}/network-services/unifi-network-application/unifi/config:/config
    restart: unless-stopped
    networks:
      - network-services
    
  mongo:
    image: mongo:7.0.5
    container_name: mongo
    ports: 
      - 27017:27017
    volumes:
      - ${VOLUMES_PATH}/network-services/unifi-network-application/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ${VOLUMES_PATH}/network-services/unifi-network-application/mongodb/db:/data/db
      - ${VOLUMES_PATH}/network-services/unifi-network-application/mongodb/configdb:/data/configdb
    command: 
      mongod --port 27017
    restart: unless-stopped
    networks:
      - network-services

  cloudflare:
    image: cloudflare/cloudflared:2024.1.3
    container_name: cloudflare
    environment:
      - PUID=1000
      - PGID=1000
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN}
    restart: unless-stopped
    networks:
      - network-services

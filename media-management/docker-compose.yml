version: "3.9"

networks:
  media-management:
    external: true

services:
  sonarr:
    image: ghcr.io/linuxserver/sonarr:3.0.10
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/sonarr:/config
      - ${MEDIA_HDD_PATH}/data:/media
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - media-management

  radarr:
    image: ghcr.io/linuxserver/radarr:4.4.4
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/radarr:/config
      - ${MEDIA_HDD_PATH}/data:/media
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - media-management

  bazarr:
    image: ghcr.io/linuxserver/bazarr:1.2.0
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/bazarr:/config
      - ${MEDIA_HDD_PATH}/data/movies:/movies
      - ${MEDIA_HDD_PATH}/data/series:/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      - media-management

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:1.2.2
    container_name: prowlarr
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - media-management

  jellyfin:
    image: ghcr.io/linuxserver/jellyfin:amd64-10.8.9
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - HEALTHCHECK_URL=http://localhost:8096/health
    group_add: 
      - "44"
    volumes:
      - ${VOLUMES_PATH}/media-management/jellyfin:/config
      - ${MEDIA_HDD_PATH}/data/series:/data/tvshows
      - ${MEDIA_HDD_PATH}/data/movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped
    networks:
      - media-management
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8096/health | grep -q 'Healthy'
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s

  plex:
    image: lscr.io/linuxserver/plex:1.32.0
    container_name: plex
    ports:
      - 32400:32400
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - VERSION=docker
    volumes:
      - ${VOLUMES_PATH}/media-management/plex:/config
      - ${MEDIA_HDD_PATH}/data/series:/tv
      - ${MEDIA_HDD_PATH}/data/movies:/movies
    devices:
      - /dev/dri:/dev/dri # intel hw acc
    restart: unless-stopped
    networks:
      - media-management
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:32400/identity
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s

  nextpvr:
    image: nextpvr/nextpvr_amd64:latest
    container_name: nextpvr
    environment:
      - TZ=${TIMEZONE}
      - PUID=1000
      - PGID=1000
    ports:
      - 8866:8866
    volumes:
      - ${VOLUMES_PATH}/media-management/nextpvr/config:/config
      - ${MEDIA_HDD_PATH}/data/nextpvr/buffer:/buffer
      - ${MEDIA_HDD_PATH}/data/nextpvr/recordings:/recordings
    devices:
      - /dev/dvb:/dev/dvb
      - /dev/dri:/dev/dri
    restart: unless-stopped
    networks:
      - media-management
    labels:
      ofelia.enabled: "true"
      ofelia.job-local.nextpvr.schedule: "0 0 3 * * *"
      ofelia.job-local.nextpvr.command: "docker restart nextpvr"

  ofelia:
    image: mcuadros/ofelia:v0.3.7
    container_name: ofelia
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - plextraktsync
      - nextpvr
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - media-management

  plextraktsync:
    image: ghcr.io/taxel/plextraktsync:0.26.1
    container_name: plextraktsync
    command: sync
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/plextraktsync/config:/app/config
    networks:
      - media-management
    labels:
      ofelia.enabled: "true"
      ofelia.job-run.plextraktsync.schedule: "@every 6h"
      ofelia.job-run.plextraktsync.container: "plextraktsync"

  tautulli:
    image: ghcr.io/tautulli/tautulli:v2.12.3
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - ${VOLUMES_PATH}/media-management/tautulli/config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 8181:8181
    networks:
      - media-management

  deluge:
    image: ghcr.io/linuxserver/deluge:2.1.1
    container_name: deluge
    ports:
      - 8112:8112
    environment:
      - TZ=${TIMEZONE}
      - DELUGE_LOGLEVEL=error
    volumes:
      - ${VOLUMES_PATH}/media-management/deluge:/config
      - ${MEDIA_HDD_PATH}/data/downloads:/downloads
    restart: unless-stopped
    networks:
      - media-management
